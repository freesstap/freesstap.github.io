<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://freesstap.github.io/news/article-63106.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link href="https://fonts.googleapis.com/css?family=Raleway:100,300,400,500,700,900" rel="stylesheet">
    <title>Java数据结构-栈的实现</title>
        <meta name="description" content="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;嘻嘻,今天博主终于要更新栈的知识了,上次结束说要更新要是上一次,所以这次咱就把栈的实现的更新带来了,嗯~ o(*￣▽￣*)o小伙伴可" />
        <link rel="icon" href="/assets/website/img/freesstap/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Free SSTap免费机场订阅节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://freesstap.github.io/news/article-63106.htm" />
    <meta property="og:site_name" content="Free SSTap免费机场订阅节点官网" />
    <meta property="og:title" content="Java数据结构-栈的实现" />
    <meta property="og:image" content="https://freesstap.github.io/uploads/20241110/7bd2e0daf9f295a25fb89523d25f4139.webp" />
        <meta property="og:release_date" content="2025-02-26T08:32:45" />
    <meta property="og:updated_time" content="2025-02-26T08:32:45" />
        <meta property="og:description" content="&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;嘻嘻,今天博主终于要更新栈的知识了,上次结束说要更新要是上一次,所以这次咱就把栈的实现的更新带来了,嗯~ o(*￣▽￣*)o小伙伴可" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Java数据结构-栈的实现">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <!-- Additional CSS Files -->
    <link rel="stylesheet" type="text/css" href="/assets/website/css/freesstap/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="/assets/website/css/freesstap/font-awesome.css">
    <link rel="stylesheet" href="/assets/website/css/freesstap/templatemo-softy-pinko.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-74P0V8MYK1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-74P0V8MYK1');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- ***** Preloader Start ***** -->
    <div id="preloader">
        <div class="jumper">
            <div></div>
            <div></div>
            <div></div>
        </div>
    </div>
    <!-- ***** Preloader End ***** -->
    <!-- ***** Header Area Start ***** -->
    <header class="header-area header-sticky">
        <div class="container">
            <div class="row">
                <div class="col-12">
                    <nav class="main-nav">
                        <!-- ***** Logo Start ***** -->
                        <a href="/" class="logo">
                                                    <span>Free SSTap</span>
                                                </a>
                        <!-- ***** Logo End ***** -->
                        <!-- ***** Menu Start ***** -->
                        <ul class="nav">
                                                        <li><a href="/">首页</a></li>
                                                        <li><a href="/free-nodes/">免费节点</a></li>
                                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                        <li><a href="/client.htm">客户端</a></li>
                                                        <li><a href="/news/">新闻资讯</a></li>
                                                    </ul>
                        <a class='menu-trigger'>
                            <span>Menu</span>
                        </a>
                        <!-- ***** Menu End ***** -->
                    </nav>
                </div>
            </div>
        </div>
    </header>
    <!-- ***** Header Area End ***** -->
    <!-- ***** Welcome Area Start ***** -->
    <div class="welcome-area" id="welcome">
        <!-- ***** Header Text Start ***** -->
        <div class="header-text">
            <div class="container">
                <div class="row">
                    <div class="offset-xl-3 col-xl-6 offset-lg-2 col-lg-8 col-md-12 col-sm-12">
                        <h2>Java数据结构-栈的实现</h2>
                        <p>
                            <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                        </p>
                    </div>
                </div>
            </div>
        </div>
        <!-- ***** Header Text End ***** -->
    </div>
    <!-- ***** Welcome Area End ***** -->
    <!-- ***** Features Big Item Start ***** -->
    <section class="section padding-top-70 padding-bottom-0" id="features">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				<div id="content_views" class="htmledit_views"> </h1> <blockquote> <p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;嘻嘻,今天博主终于要更新栈的知识了,上次结束说要更新要是上一次,所以这次咱就把栈的实现的更新带来了,嗯~ o(*￣▽￣*)o小伙伴可能会问,栈能干什么啊,在Java中栈不是有对应的类吗....</p> <p class="img-center"> <p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<strong>栈能够实现逆波兰计算机,中缀表达式转后缀表达式,还有普通中缀计算机等.....</strong></p> <p class="img-center"> <p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;话不多说,我们就从一下几个方面开始吧</p> <p>&nbsp; &nbsp; &nbsp; &nbsp;<span style="color:#511b78;"><em><strong> 栈的概念 ???? 栈的实现思路&nbsp;???? 栈的代码实现与分析&nbsp;???? 结论&nbsp;</strong></em></span></p> <p><span style="color:#511b78;"><em><strong>&nbsp; &nbsp; &nbsp; &nbsp; </strong></em></span><span style="color:#38d8f0;"><em><strong>如果喜欢作者的话</strong></em></span><span style="color:#511b78;"><em><strong>,<a class="link-info" href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/JOElib?spm=1000.2115.3001.5343"  title="戳这" rel="nofollow">戳这</a></strong></em></span></p> <p><span style="color:#511b78;"><em><strong>&nbsp; &nbsp; &nbsp; &nbsp; </strong></em></span><span style="color:#fe2c24;"><em><strong>往期精彩:</strong></em></span><br /> &nbsp; &nbsp; &nbsp; &nbsp; <a class="link-info" href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://blog.csdn.net/JOElib/article/details/123560844?spm=1001.2014.3001.5501"  title="普通队列与环形队列" rel="nofollow">普通队列与环形队列</a></p> </blockquote> <hr/> </h1> <ol> <li>&nbsp;栈是一个<span style="color:#fe2c24;"><strong>先进后出,后进先出</strong></span>的有序列表</li> <li>&nbsp;在栈中添加元素和删除元素都在一端执行,是一个特殊的线性表</li> <li>&nbsp;插入元素或删除元素的一端是活跃的一端,被称为栈顶</li> <li>&nbsp;另一端不活跃,被称为栈底</li> <li>&nbsp;常用术语:压栈=入栈=push 出栈=弹栈=pop</li> </ol> <hr/> </h1> <ul> <li>&nbsp;我们需要创建一个数组去模拟栈</li> <li>&nbsp;定义一个栈顶变量top,用于指向栈顶</li> <li>&nbsp;定义压栈弹栈等方法</li> </ul> <hr/> </h1> <ul> <li> <h3>创建一个数组及其变量模拟栈&nbsp;</h3> </li> </ul> <pre><code class="language-java">    private int maxSize;     private int top;     private Object[] stack;      public ArraysStack(int maxSize) {         this.maxSize = maxSize;         this.top = -1;         stack = new Object[maxSize];     }</code></pre> <p>&nbsp;<strong>代码分析:</strong></p> <ul> <li>&nbsp;<strong>maxSize是栈的最大容量,</strong>在调用构造方法的时候可以自行指定</li> <li> <strong>&nbsp;top用于指向栈顶的变量</strong>,应该被初始化为-1</li> <li>&nbsp;这里选用了Object[]数组,<strong>目的是什么都可以放进去</strong> </li> </ul> <p><strong>图解:&nbsp;</strong></p> <p style="text-align:center;"><img decoding="async" alt="" src="http://img.555519.xyz/uploads/20230205/ca990a8cc8cca5987562c26b941319e9.jpg">&nbsp;</p> <ul> <li> <h3>&nbsp;<strong>创造两个方法,分别判断是否已满或已空</strong><br /> </h3> </li> </ul> <pre><code class="language-java">public boolean isFull() {         return top == maxSize - 1;     } public boolean isEmpty() {         return top == -1;     }</code></pre> <p>&nbsp;<strong>代码分析:</strong>&nbsp;</p> <p><strong>图解:&nbsp;</strong></p> <p style="text-align:center;"><img decoding="async" alt="" src="http://img.555519.xyz/uploads/20230205/b59718de67d20e8c50bd6dcab556a304.jpg"></p> <ul> <li> <h3>&nbsp;创建一个压栈和弹栈的方法</h3> </li> </ul> <pre><code class="language-java">public void push(E element) {         if(isFull()) {             System.out.println("栈已满,无法压栈");             return;         }         stack[++top] = element;     } public E pop() throws Exception{         if(isEmpty()) {             throw new Exception("栈已空,无法弹栈");         }         return (E)stack[top--];     }</code></pre> <p>&nbsp;&nbsp;<strong>代码分析:</strong>&nbsp;</p> <ul> <li>加入元素和取出元素之前,要分别分析一下栈是否为空,或是否为满,要有<strong>校验意识</strong> </li> <li>因为<strong>top初始化为-1</strong>,所以添加元素的时候应该<strong>先要自增,再添加</strong> </li> <li>因为<strong>top指向栈顶元素</strong>,所以取出元素时,<strong>先取出,栈顶top变量再自减&nbsp;</strong> </li> </ul> <p>&nbsp;<strong>图解:&nbsp;</strong></p> <p style="text-align:center;">&nbsp;<img decoding="async" alt="" src="http://img.555519.xyz/uploads/20230205/bc64675d8ea29760b5c73a50126e22b9.jpg"></p> <ul> <li> <h3>&nbsp;创建一个遍历的方法</h3> </li> </ul> <pre><code class="language-java">public void print() {         if(isEmpty()){             System.out.println("栈已空,无法输出");             return;         }         for (int i = top; i &gt;= 0; i--) {             System.out.println("stack[" + i + "] = " + stack[i]);         }     }</code></pre> <p>&nbsp;&nbsp;&nbsp;<strong>代码分析:</strong>&nbsp;</p> <ol> <li>从栈的定义得知,先<strong>拿出来的是栈顶元素</strong>,所以应该从top开始,到0结束&nbsp;&nbsp;</li> </ol> <h3>&nbsp;完整代码:</h3> <pre><code class="language-java">package datastructure.chapter02.stack.instance;  /**  *  * @param &lt;E&gt; 指定栈存储的元素  */ public class ArraysStack&lt;E&gt; {     private int maxSize;     private int top;     private Object[] stack;      /**      * 栈(数组实现)的构造方法      * @param maxSize 栈空间的最大值      */     public ArraysStack(int maxSize) {         this.maxSize = maxSize;         this.top = -1;         stack = new Object[maxSize];     }      /**      *  判断栈是否为满      * @return 若返回值为true,则栈已满,否则为false      */     public boolean isFull() {         return top == maxSize - 1;     }      /**      *  判断栈是否为空      * @return 若返回值为true,则栈已空,否则为false      */     public boolean isEmpty() {         return top == -1;     }      /**      * @param element 压入栈的数据      */     public void push(E element) {         if(isFull()) {             System.out.println("栈已满,无法压栈");             return;         }         stack[++top] = element;     }      /**      *      * @return 返回栈顶数据      * @throws Exception 空栈异常      */     public E pop() throws Exception{         if(isEmpty()) {             throw new Exception("栈已空,无法弹栈");         }         return (E)stack[top--];     }      /**      * 输出栈      */     public void print() {         if(isEmpty()){             System.out.println("栈已空,无法输出");             return;         }         for (int i = top; i &gt;= 0; i--) {             System.out.println("stack[" + i + "] = " + stack[i]);         }     } } </code></pre> </h1> <blockquote> <p>&nbsp; &nbsp; &nbsp; &nbsp; 栈的知识点简单又重要,代码不多,理解起来也不难,我来总结一下重要的几点:</p> <p>&nbsp; &nbsp; &nbsp; &nbsp; <strong>栈顶top的初始化赋值</strong></p> <p><strong>&nbsp; &nbsp; &nbsp; &nbsp; 栈的压栈和弹栈的方法</strong></p> <p>&nbsp; &nbsp; &nbsp; &nbsp; ????下一站:双向链表!!!</p> </blockquote></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-62508.htm">Java之LocalDate,LocalTime，LocalDateTime等时间</a></p>
                                        <p>下一个：<a href="/news/article-63107.htm">济南宠物领养中心官网招聘 济南宠物领养中心官网招聘信息</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-36826.htm" title="常用动物疫苗佐剂包括（常用动物疫苗佐剂包括哪些）">常用动物疫苗佐剂包括（常用动物疫苗佐剂包括哪些）</a></li>
                        <li class="py-2"><a href="/news/article-38293.htm" title="pycharm连接sqlite">pycharm连接sqlite</a></li>
                        <li class="py-2"><a href="/news/article-26876.htm" title="python中repr()函数用法详解">python中repr()函数用法详解</a></li>
                        <li class="py-2"><a href="/news/article-50751.htm" title="女孩十大最好专业（女孩十大最好专业女孩大专专业）">女孩十大最好专业（女孩十大最好专业女孩大专专业）</a></li>
                        <li class="py-2"><a href="/news/article-56722.htm" title="javaScript中Math内置对象基本方法入门_在线工具">javaScript中Math内置对象基本方法入门_在线工具</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-26-free-node-subscribe.htm" title="Free SSTap节点订阅每天更新18.5M/S免费节点订阅链接">Free SSTap节点订阅每天更新18.5M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-29-free-subscribe-node.htm" title="Free SSTap节点订阅每天更新19.5M/S免费节点订阅链接">Free SSTap节点订阅每天更新19.5M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-21335.htm" title="开个宠物美容店需要什么（开个宠物美容店需要什么资质）">开个宠物美容店需要什么（开个宠物美容店需要什么资质）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-23-free-node-subscribe.htm" title="Free SSTap节点订阅每天更新21.2M/S免费节点订阅链接">Free SSTap节点订阅每天更新21.2M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-16-node-share.htm" title="Free SSTap节点订阅每天更新22.6M/S免费节点订阅链接">Free SSTap节点订阅每天更新22.6M/S免费节点订阅链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">78</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">92</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">25</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!-- ***** Features Big Item End ***** -->
        <!-- ***** Footer Start ***** -->
    <footer>
        <div class="container">
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12">
                    <ul class="social">
                        <li><a href="#"><i class="fa fa-facebook"></i></a></li>
                        <li><a href="#"><i class="fa fa-twitter"></i></a></li>
                        <li><a href="#"><i class="fa fa-linkedin"></i></a></li>
                        <li><a href="#"><i class="fa fa-rss"></i></a></li>
                        <li><a href="#"><i class="fa fa-dribbble"></i></a></li>
                    </ul>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12">
                    <p class="copyright">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                        <a href="/">Free SSTap免费机场订阅节点官网</a> 版权所有 Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </footer>
    <!-- jQuery -->
    <script src="/assets/website/js/frontend/freesstap/jquery-2.1.0.min.js"></script>
    <!-- Bootstrap -->
    <script src="/assets/website/js/frontend/freesstap/popper.js"></script>
    <script src="/assets/website/js/frontend/freesstap/bootstrap.min.js"></script>
    <!-- Plugins -->
    <script src="/assets/website/js/frontend/freesstap/scrollreveal.min.js"></script>
    <script src="/assets/website/js/frontend/freesstap/waypoints.min.js"></script>
    <script src="/assets/website/js/frontend/freesstap/jquery.counterup.min.js"></script>
    <script src="/assets/website/js/frontend/freesstap/imgfix.min.js"></script>
    <!-- Global Init -->
    <script src="/assets/website/js/frontend/freesstap/custom.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>