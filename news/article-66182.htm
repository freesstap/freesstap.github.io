<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://freesstap.github.io/news/article-66182.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link href="https://fonts.googleapis.com/css?family=Raleway:100,300,400,500,700,900" rel="stylesheet">
    <title>java如何对Map进行排序</title>
        <meta name="description" content="Map排序（按key排序，按value排序） 主要分两种，按键排序、按值排序。 而且，按key排序主要用于TreeMap，而按value排序则对于Map的子类们都适用。 一、按键排序 按Key排序主要" />
        <link rel="icon" href="/assets/website/img/freesstap/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Free SSTap免费机场订阅节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://freesstap.github.io/news/article-66182.htm" />
    <meta property="og:site_name" content="Free SSTap免费机场订阅节点官网" />
    <meta property="og:title" content="java如何对Map进行排序" />
    <meta property="og:image" content="https://freesstap.github.io/uploads/20241110/e193484641c220623268f75d568a3605.webp" />
        <meta property="og:release_date" content="2025-03-03T08:13:12" />
    <meta property="og:updated_time" content="2025-03-03T08:13:12" />
        <meta property="og:description" content="Map排序（按key排序，按value排序） 主要分两种，按键排序、按值排序。 而且，按key排序主要用于TreeMap，而按value排序则对于Map的子类们都适用。 一、按键排序 按Key排序主要" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="java如何对Map进行排序">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <!-- Additional CSS Files -->
    <link rel="stylesheet" type="text/css" href="/assets/website/css/freesstap/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="/assets/website/css/freesstap/font-awesome.css">
    <link rel="stylesheet" href="/assets/website/css/freesstap/templatemo-softy-pinko.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-74P0V8MYK1"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-74P0V8MYK1');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!-- ***** Preloader Start ***** -->
    <div id="preloader">
        <div class="jumper">
            <div></div>
            <div></div>
            <div></div>
        </div>
    </div>
    <!-- ***** Preloader End ***** -->
    <!-- ***** Header Area Start ***** -->
    <header class="header-area header-sticky">
        <div class="container">
            <div class="row">
                <div class="col-12">
                    <nav class="main-nav">
                        <!-- ***** Logo Start ***** -->
                        <a href="/" class="logo">
                                                    <span>Free SSTap</span>
                                                </a>
                        <!-- ***** Logo End ***** -->
                        <!-- ***** Menu Start ***** -->
                        <ul class="nav">
                                                        <li><a href="/">首页</a></li>
                                                        <li><a href="/free-nodes/">免费节点</a></li>
                                                        <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                        <li><a href="/client.htm">客户端</a></li>
                                                        <li><a href="/news/">新闻资讯</a></li>
                                                    </ul>
                        <a class='menu-trigger'>
                            <span>Menu</span>
                        </a>
                        <!-- ***** Menu End ***** -->
                    </nav>
                </div>
            </div>
        </div>
    </header>
    <!-- ***** Header Area End ***** -->
    <!-- ***** Welcome Area Start ***** -->
    <div class="welcome-area" id="welcome">
        <!-- ***** Header Text Start ***** -->
        <div class="header-text">
            <div class="container">
                <div class="row">
                    <div class="offset-xl-3 col-xl-6 offset-lg-2 col-lg-8 col-md-12 col-sm-12">
                        <h2>java如何对Map进行排序</h2>
                        <p>
                            <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                        </p>
                    </div>
                </div>
            </div>
        </div>
        <!-- ***** Header Text End ***** -->
    </div>
    <!-- ***** Welcome Area End ***** -->
    <!-- ***** Features Big Item Start ***** -->
    <section class="section padding-top-70 padding-bottom-0" id="features">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="Clash Meta免费节点订阅站" data-url="https://clash-meta.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <h2><a id="Mapkeyvalue_0" rel="nofollow"></a><strong>Map排序（按key排序，按value排序）</strong></h2> <p>主要分两种，按键排序、按值排序。 而且，按key排序主要用于TreeMap，而按value排序则对于Map的子类们都适用。</p> <h2><a id="_4" rel="nofollow"></a>一、按键排序</h2> <p>按Key排序主要用于TreeMap，可以实现按照Key值的大小，在对象插入时直接插入到合适的位置，保持Map的顺序性。</p> <p>来看TreeMap的构造函数：<code>TreeMap(Comparator&lt;? super K&gt; comparator)：</code>构造一个新的、空的树映射，该映射根据给定比较器进行排序。</p> <p>这里的比较器是key的比较器。所以定义比较器时用于比较的两个参数是Key的数据类型的对象。</p> <p>实例代码如下：</p> <pre><code class="prism language-java"><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">MapSortTest</span><span class="token punctuation">{<!-- --></span><span class="token keyword">public</span><span class="token keyword">static</span><span class="token keyword">void</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> stu<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">TreeMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token keyword">new</span><span class="token class-name">MyComparator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//传进来一个key的比较器对象来构造treemap</span> 　　stu<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"apple"</span><span class="token punctuation">,</span><span class="token string">"55"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 　　stu<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"boy"</span><span class="token punctuation">,</span><span class="token string">"32"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 　　stu<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"cat"</span><span class="token punctuation">,</span><span class="token string">"22"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 　　stu<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"dog"</span><span class="token punctuation">,</span><span class="token string">"12"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 　　stu<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"egg"</span><span class="token punctuation">,</span><span class="token string">"11"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//map的遍历：把key抽取出来用set存放，然后用迭代器遍历keyset，同时用map.get(KEY)获取key所对应的value。</span><span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> keySet<span class="token operator">=</span>stu<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">Iterator</span> it<span class="token operator">=</span>keySet<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span>it<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token class-name">String</span> next<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>next<span class="token operator">+</span><span class="token string">","</span><span class="token operator">+</span>stu<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>next<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">//定义key的比较器，比较算法根据第一个参数o1,小于、等于或者大于o2分别返回负整数、0或者正整数，来决定二者存放的先后位置：返回负数则o1在前，正数则o2在前。</span><span class="token keyword">class</span><span class="token class-name">MyComparator</span><span class="token keyword">implements</span><span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{<!-- --></span><span class="token keyword">public</span><span class="token keyword">int</span><span class="token function">compare</span><span class="token punctuation">(</span><span class="token class-name">String</span> o1<span class="token punctuation">,</span><span class="token class-name">String</span> o2<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span> o1<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>o2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> <p>**</p> <h2><a id="_44" rel="nofollow"></a>二、按值排序</h2> <p>与按值排序只使用TreeMap不同，按值排序由于其方法所用到的类型的统一性，所以能用于Map的所有子类。</p> <p>主要用到的知识点有;</p> <p><strong>1:map.entrySet()将map里的每一个键值对取出来封装成一个Entry对象并存放到一个Set里面。</strong></p> <p>2：泛型Map.Entry&lt;type1,type2&gt; 因为Key-value对组成Entry对象，此处指明Entry对象中这两个成员的数据类型。</p> <p>3：Collections.sort(List list, Comparator&lt;? super T&gt; c) 集合类的排序方法，通过自定义的比较器进行排序。这里的list存放的对象是entry对象。定义比较器对entry对象中的value属性进行比较。</p> <p>实例代码如下：</p> <pre><code class="prism language-java"><span class="token keyword">public</span><span class="token keyword">class</span><span class="token class-name">MapSortTest</span><span class="token punctuation">{<!-- --></span><span class="token keyword">public</span><span class="token keyword">static</span><span class="token keyword">void</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> stu<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">TreeMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//用TreeMap储存</span><span class="token comment">// Map&lt;String,String&gt; stu=new HashMap&lt;&gt;();//用HashMap储存</span>  　　　　stu<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"apple"</span><span class="token punctuation">,</span><span class="token string">"55"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 　　　　stu<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"boy"</span><span class="token punctuation">,</span><span class="token string">"32"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 　　　　stu<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"cat"</span><span class="token punctuation">,</span><span class="token string">"22"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 　　　　stu<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"dog"</span><span class="token punctuation">,</span><span class="token string">"12"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 　　　　stu<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"egg"</span><span class="token punctuation">,</span><span class="token string">"11"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//1：把map转换成entryset，再转换成保存Entry对象的list。</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> entrys<span class="token operator">=</span><span class="token keyword">new</span><span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>stu<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//2：调用Collections.sort(list,comparator)方法把Entry-list排序</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>entrys<span class="token punctuation">,</span><span class="token keyword">new</span><span class="token class-name">MyComparator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//3：遍历排好序的Entry-list，可得到按顺序输出的结果</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> entry<span class="token operator">:</span>entrys<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">","</span><span class="token operator">+</span>entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment">//自定义Entry对象的比较器。每个Entry对象可通过getKey()、getValue()获得Key或Value用于比较。换言之：我们也可以通过Entry对象实现按Key排序。</span><span class="token keyword">class</span><span class="token class-name">MyComparator</span><span class="token keyword">implements</span><span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{<!-- --></span><span class="token keyword">public</span><span class="token keyword">int</span><span class="token function">compare</span><span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span> o1<span class="token punctuation">,</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span> o2<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span><span class="token keyword">return</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>o1<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>o2<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-66181.htm">高薪程序员&amp;面试题精讲系列17之Java代码中如果有太多if语句该如何优化？</a></p>
                                        <p>下一个：<a href="/news/article-66804.htm">中国动物疫苗生产企业排名前十 中国动物疫苗生产企业排名前十名</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-33949.htm" title="动物疫苗价格表最新图片高清大图 动物疫苗价格表最新图片高清大图下载">动物疫苗价格表最新图片高清大图 动物疫苗价格表最新图片高清大图下载</a></li>
                        <li class="py-2"><a href="/news/article-45230.htm" title="2021年动物防疫工作要点（2021年动物防疫工作要点有哪些）">2021年动物防疫工作要点（2021年动物防疫工作要点有哪些）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-1-node-share-links.htm" title="Free SSTap节点订阅每天更新22.5M/S免费节点订阅链接">Free SSTap节点订阅每天更新22.5M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-16-node-share-links.htm" title="Free SSTap节点订阅每天更新18.8M/S免费节点订阅链接">Free SSTap节点订阅每天更新18.8M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-33472.htm" title="宠物美容师发展空间有多大（宠物美容师这个行业弊端）">宠物美容师发展空间有多大（宠物美容师这个行业弊端）</a></li>
                        <li class="py-2"><a href="/news/article-35844.htm" title="动物医院需要什么手续和证件 动物医院需要什么手续和证件呢">动物医院需要什么手续和证件 动物医院需要什么手续和证件呢</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-12-free-node-subscribe-links.htm" title="Free SSTap节点订阅每天更新21.7M/S免费节点订阅链接">Free SSTap节点订阅每天更新21.7M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-31099.htm" title="成都哪里有宠物领养中心（成都哪里可以领养宠物）">成都哪里有宠物领养中心（成都哪里可以领养宠物）</a></li>
                        <li class="py-2"><a href="/news/article-42749.htm" title="小动物疫苗本 动物疫苗本怎么办">小动物疫苗本 动物疫苗本怎么办</a></li>
                        <li class="py-2"><a href="/news/article-54496.htm" title="小型宠物粮食加工设备价格表 小型宠物粮食加工设备价格表图片">小型宠物粮食加工设备价格表 小型宠物粮食加工设备价格表图片</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">12</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">92</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">87</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!-- ***** Features Big Item End ***** -->
        <!-- ***** Footer Start ***** -->
    <footer>
        <div class="container">
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12">
                    <ul class="social">
                        <li><a href="#"><i class="fa fa-facebook"></i></a></li>
                        <li><a href="#"><i class="fa fa-twitter"></i></a></li>
                        <li><a href="#"><i class="fa fa-linkedin"></i></a></li>
                        <li><a href="#"><i class="fa fa-rss"></i></a></li>
                        <li><a href="#"><i class="fa fa-dribbble"></i></a></li>
                    </ul>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12">
                    <p class="copyright">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                        <a href="/">Free SSTap免费机场订阅节点官网</a> 版权所有 Powered by WordPress
                    </p>
                </div>
            </div>
        </div>
    </footer>
    <!-- jQuery -->
    <script src="/assets/website/js/frontend/freesstap/jquery-2.1.0.min.js"></script>
    <!-- Bootstrap -->
    <script src="/assets/website/js/frontend/freesstap/popper.js"></script>
    <script src="/assets/website/js/frontend/freesstap/bootstrap.min.js"></script>
    <!-- Plugins -->
    <script src="/assets/website/js/frontend/freesstap/scrollreveal.min.js"></script>
    <script src="/assets/website/js/frontend/freesstap/waypoints.min.js"></script>
    <script src="/assets/website/js/frontend/freesstap/jquery.counterup.min.js"></script>
    <script src="/assets/website/js/frontend/freesstap/imgfix.min.js"></script>
    <!-- Global Init -->
    <script src="/assets/website/js/frontend/freesstap/custom.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>